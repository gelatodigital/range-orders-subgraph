// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class LogSetRangeOrder extends ethereum.Event {
  get params(): LogSetRangeOrder__Params {
    return new LogSetRangeOrder__Params(this);
  }
}

export class LogSetRangeOrder__Params {
  _event: LogSetRangeOrder;

  constructor(event: LogSetRangeOrder) {
    this._event = event;
  }

  get tokenId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get pool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get token0(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get fee(): i32 {
    return this._event.parameters[4].value.toI32();
  }

  get amountIn(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get creator(): Address {
    return this._event.parameters[6].value.toAddress();
  }
}

export class RangeOrder extends ethereum.SmartContract {
  static bind(address: Address): RangeOrder {
    return new RangeOrder("RangeOrder", address);
  }

  WETH9(): Address {
    let result = super.call("WETH9", "WETH9():(address)", []);

    return result[0].toAddress();
  }

  try_WETH9(): ethereum.CallResult<Address> {
    let result = super.tryCall("WETH9", "WETH9():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  eject(): Address {
    let result = super.call("eject", "eject():(address)", []);

    return result[0].toAddress();
  }

  try_eject(): ethereum.CallResult<Address> {
    let result = super.tryCall("eject", "eject():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ejectResolver(): Address {
    let result = super.call("ejectResolver", "ejectResolver():(address)", []);

    return result[0].toAddress();
  }

  try_ejectResolver(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "ejectResolver",
      "ejectResolver():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get eject_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get WETH9_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ejectResolver_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CancelRangeOrderCall extends ethereum.Call {
  get inputs(): CancelRangeOrderCall__Inputs {
    return new CancelRangeOrderCall__Inputs(this);
  }

  get outputs(): CancelRangeOrderCall__Outputs {
    return new CancelRangeOrderCall__Outputs(this);
  }
}

export class CancelRangeOrderCall__Inputs {
  _call: CancelRangeOrderCall;

  constructor(call: CancelRangeOrderCall) {
    this._call = call;
  }

  get tokenId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get params_(): CancelRangeOrderCallParams_Struct {
    return this._call.inputValues[1].value.toTuple() as CancelRangeOrderCallParams_Struct;
  }
}

export class CancelRangeOrderCall__Outputs {
  _call: CancelRangeOrderCall;

  constructor(call: CancelRangeOrderCall) {
    this._call = call;
  }
}

export class CancelRangeOrderCallParams_Struct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get zeroForOne(): boolean {
    return this[1].toBoolean();
  }

  get ejectDust(): boolean {
    return this[2].toBoolean();
  }

  get tickThreshold(): i32 {
    return this[3].toI32();
  }

  get amountIn(): BigInt {
    return this[4].toBigInt();
  }

  get minAmountOut(): BigInt {
    return this[5].toBigInt();
  }

  get receiver(): Address {
    return this[6].toAddress();
  }

  get maxFeeAmount(): BigInt {
    return this[7].toBigInt();
  }
}

export class SetRangeOrderCall extends ethereum.Call {
  get inputs(): SetRangeOrderCall__Inputs {
    return new SetRangeOrderCall__Inputs(this);
  }

  get outputs(): SetRangeOrderCall__Outputs {
    return new SetRangeOrderCall__Outputs(this);
  }
}

export class SetRangeOrderCall__Inputs {
  _call: SetRangeOrderCall;

  constructor(call: SetRangeOrderCall) {
    this._call = call;
  }

  get params_(): SetRangeOrderCallParams_Struct {
    return this._call.inputValues[0].value.toTuple() as SetRangeOrderCallParams_Struct;
  }
}

export class SetRangeOrderCall__Outputs {
  _call: SetRangeOrderCall;

  constructor(call: SetRangeOrderCall) {
    this._call = call;
  }
}

export class SetRangeOrderCallParams_Struct extends ethereum.Tuple {
  get pool(): Address {
    return this[0].toAddress();
  }

  get zeroForOne(): boolean {
    return this[1].toBoolean();
  }

  get ejectDust(): boolean {
    return this[2].toBoolean();
  }

  get tickThreshold(): i32 {
    return this[3].toI32();
  }

  get amountIn(): BigInt {
    return this[4].toBigInt();
  }

  get minAmountOut(): BigInt {
    return this[5].toBigInt();
  }

  get receiver(): Address {
    return this[6].toAddress();
  }

  get maxFeeAmount(): BigInt {
    return this[7].toBigInt();
  }
}
